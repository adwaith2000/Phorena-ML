apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"kompose.cmd":"kompose convert","kompose.version":"1.21.0 (992df58d8)"},"creationTimestamp":null,"labels":{"io.kompose.service":"mosquitto"},"name":"mosquitto","namespace":"default"},"spec":{"ports":[{"name":"1883","port":1883,"targetPort":1883},{"name":"9001","port":9001,"targetPort":9001}],"selector":{"io.kompose.service":"mosquitto"}},"status":{"loadBalancer":{}}}
  creationTimestamp: "2020-10-20T08:53:10Z"
  labels:
    io.kompose.service: mosquitto
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kompose.cmd: {}
          f:kompose.version: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:io.kompose.service: {}
      f:spec:
        f:ports:
          .: {}
          k:{"port":1883,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":9001,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector:
          .: {}
          f:io.kompose.service: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2020-10-20T08:53:10Z"
  name: mosquitto
  namespace: default
  resourceVersion: "2241"
  selfLink: /api/v1/namespaces/default/services/mosquitto
  uid: ace02545-e6f6-4633-b61b-5a4802ac9e79
spec:
  clusterIP: 10.152.183.49
  ports:
  - name: "1883"
    port: 1883
    protocol: TCP
    targetPort: 1883
  - name: "9001"
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    io.kompose.service: mosquitto
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
